{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n    this.baseURL = 'http://localhost:5136/api/Clientes';\n  }\n  getAllClients() {\n    return this._httpClient.get(this.baseURL);\n  }\n  getClient(id) {\n    return this._httpClient.get(`${this.baseURL}/${id}`);\n  }\n  postClient(cliente) {\n    return this._httpClient.post(`${this.baseURL}`, cliente);\n  }\n  putClient(id, cliente) {\n    return this._httpClient.put(`${this.baseURL}/${id}`, cliente);\n  }\n  deleteClient(id) {\n    return this._httpClient.delete(`${this.baseURL}/${id}`);\n  }\n  static {\n    this.ɵfac = function ApiService_Factory(t) {\n      return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiService,\n      factory: ApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ApiService","constructor","_httpClient","baseURL","getAllClients","get","getClient","id","postClient","cliente","post","putClient","put","deleteClient","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/ericramirez/Desktop/Dev_Learning/FrontEnd/Angular/control_clientes_frontend/src/app/services/api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ICliente } from '../Models/cliente.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private baseURL ='http://localhost:5136/api/Clientes'\n\n  constructor(private _httpClient: HttpClient) { }\n\n    public getAllClients(): Observable<ICliente[]>{\n      return this._httpClient.get<ICliente[]>(this.baseURL);\n    }\n\n    public getClient(id: number): Observable<ICliente>{\n      return this._httpClient.get<ICliente>(`${this.baseURL}/${id}`);\n    }\n\n    public postClient(cliente: ICliente): Observable<ICliente>{\n      return this._httpClient.post<ICliente>(`${this.baseURL}`,  cliente);\n    }\n\n    public putClient(id: number, cliente: ICliente): Observable<ICliente>{\n      return this._httpClient.put<ICliente>(`${this.baseURL}/${id}`, cliente);\n    }\n\n    public deleteClient(id: number): Observable<ICliente>{\n      return this._httpClient.delete<ICliente>(`${this.baseURL}/${id}`);\n    }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,UAAU;EAIrBC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;IAFvB,KAAAC,OAAO,GAAE,oCAAoC;EAEN;EAEtCC,aAAaA,CAAA;IAClB,OAAO,IAAI,CAACF,WAAW,CAACG,GAAG,CAAa,IAAI,CAACF,OAAO,CAAC;EACvD;EAEOG,SAASA,CAACC,EAAU;IACzB,OAAO,IAAI,CAACL,WAAW,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,OAAO,IAAII,EAAE,EAAE,CAAC;EAChE;EAEOC,UAAUA,CAACC,OAAiB;IACjC,OAAO,IAAI,CAACP,WAAW,CAACQ,IAAI,CAAW,GAAG,IAAI,CAACP,OAAO,EAAE,EAAGM,OAAO,CAAC;EACrE;EAEOE,SAASA,CAACJ,EAAU,EAAEE,OAAiB;IAC5C,OAAO,IAAI,CAACP,WAAW,CAACU,GAAG,CAAW,GAAG,IAAI,CAACT,OAAO,IAAII,EAAE,EAAE,EAAEE,OAAO,CAAC;EACzE;EAEOI,YAAYA,CAACN,EAAU;IAC5B,OAAO,IAAI,CAACL,WAAW,CAACY,MAAM,CAAW,GAAG,IAAI,CAACX,OAAO,IAAII,EAAE,EAAE,CAAC;EACnE;;;uBAxBSP,UAAU,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAVlB,UAAU;MAAAmB,OAAA,EAAVnB,UAAU,CAAAoB,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}